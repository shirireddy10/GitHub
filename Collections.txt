1.package assignment;
import java.util.*;
public class contact {
	int phnum;
	String Name;
	String Email;
	String Gender;

	public contact(int phnum, String name, String email, String Gender) {
		
		this.phnum = phnum;
		this.Name = name;
		this.Email = email;
		this.Gender = Gender;
	}
	public String toString() {
		return this.phnum +" "+this.Name +" "+this.Email +" "+this.Gender;
	}


	}
	class Sortbyphnum implements Comparator<contact>{
		public int compare(contact a,contact b) {
			return b.phnum - a.phnum;
		}
	}
	
package assignment;

import java.util.Set;
import java.util.TreeMap;

public class Treemap {
	
	static void CollectionExample() {
		TreeMap<contact,Integer>treemap=new TreeMap<contact,Integer>(new Sortbyphnum());
		treemap.put(new contact(1113056789,"siri","siri@gmail.com","female"),3);
		treemap.put(new contact(1112267897,"sai","sai@gmail.com","male"),4);
		treemap.put(new contact(1118887897,"chinnu","chinnu@gmail.com","female"),2);
		treemap.put(new contact(1114777897,"leela","leela@gmail.com","female"),1);
		
		System.out.println("treemap:"+treemap);
		
		Set<contact>keys=treemap.keySet();
		for(contact key:keys) {
			System.out.println(key);
		}
		
	System.out.println("fetching all values:"+treemap.values());
	}
		public static void main(String[] args) {
			
		System.out.println("treemap using");
		CollectionExample();
		

		
		}
		}

o/p:treemap using
treemap:{1118887897 chinnu chinnu@gmail.com female=2, 1114777897 leela leela@gmail.com female=1, 1113056789 siri siri@gmail.com female=3, 1112267897 sai sai@gmail.com male=4}
1118887897 chinnu chinnu@gmail.com female
1114777897 leela leela@gmail.com female
1113056789 siri siri@gmail.com female
1112267897 sai sai@gmail.com male
fetching all values:[2, 1, 3, 4]


2.
package collections;

import java.util.ArrayList;
import java.util.HashSet;

class GFG {
		public static void main(String[] args)
		{

			
			int array[] = { 1,2,3,4,5,6,7,8,9,9};

			
			ArrayList<Integer> ans = new ArrayList<>();

			
			HashSet<Integer> set = new HashSet<>();

			for (int i : array) {

				
				if (!set.contains(i)) {
					
					ans.add(i);
					
					set.add(i);
				}
			}

			
			for (int i : ans) {
				System.out.print(i + " ");
			}
		}
	}


o/p:1 2 3 4 5 6 7 8 9

3.
package assignment;
import java.util.Comparator;
public class Employee implements Comparable<Employee>{
	    int Id;
		String Name;
		String Department;
		int Salary;
		public Employee(int id, String name, String department, int salary) {
			
			this.Id = id;
			this.Name = name;
			this.Department = department;
			this.Salary = salary;
		}
	public int compareTo(Employee e) {
		if(Id>e.Id) {
			return 1;
		}else if(Id<e.Id) {
			return -1;
		}else {
			return 0;
		}
	}
	}
	
package assignment;

import java.util.Set;
import java.util.TreeSet;

public class Employee2 {
	public static void main(String[] args) {
		
Set<Employee>set=new TreeSet<Employee>();
Employee e1=new Employee(101,"Mounika","Software",25000);
Employee e2=new Employee(102,"Manasa","Developer",28000);
Employee e3=new Employee(103,"Mounisha","Analyst",35000);
Employee e4=new Employee(104,"Manvitha","Bussiness ",31000);
Employee e5=new Employee(105,"Monalisa","Teacher",32000);
Employee e6=new Employee(106,"Raju","Helper",55000);
Employee e7=new Employee(107,"Lucky","Software",30000);
Employee e8=new Employee(108,"Revathi","system analyst",45000);
Employee e9=new Employee(109,"Angel","QA analyst",22000);
Employee e10=new Employee(110,"Chinny","Test Engineer",23000);
	set.add(e1);
	set.add(e2);
	set.add(e3);
	set.add(e4);
	set.add(e5);
	set.add(e6);
	set.add(e7);
	set.add(e8);
	set.add(e9);
	set.add(e10);
	for(Employee e:set) {
		
		System.out.println("After Sorted:"+e.Name);
		
	}
	

	
	}

}

o/p:After Sorting:Mounika
After Sorting:Manasa
After Sorting:Mounisha
After Sorting:Manvitha
After Sorting:Monalisa
After Sorting:Raju
After Sorting:Lucky
After Sorting:Revathi
After Sorting:Angel
After Sorting:Chinny

4.
package assignment;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
public class DateOfBirth {
	
 public static void main(String[] args) {
	LocalDate cal=LocalDate.of(2019, 07,20);
	LocalDate cal1=LocalDate.of(1998, 10, 10);
	List<LocalDate>CL=new LinkedList<>();
	CL.add(cal);
	CL.add(cal1);

	for (LocalDate c : CL) {
	    String formattedDate = c.format(DateTimeFormatter.ofPattern("dd-MM-yyyy"));
	    if (c.isLeapYear()){
	        System.out.println(formattedDate + " is a leap year");

	    } else {
	        System.out.println(formattedDate + " is not a leap year");
	    }
    }
 }
}

o/p:20-07-2019 is not a leap year
10-10-1998 is not a leap year
